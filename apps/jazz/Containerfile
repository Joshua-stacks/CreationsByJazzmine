FROM node:18-alpine AS pruner
RUN apk add --no-cache libc6-compat
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --scope=jazz --docker


# Add lockfile and package.json's of isolated subworkspace
FROM node:18-alpine AS builder

# curl for installing pnpm in the layer below, libc6-compat for turborepo's post
# installation script
RUN apk --no-cache add curl libc6-compat

# Add pnpm
RUN curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm

WORKDIR /app

# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=pruner /app/out/json/ .
COPY --from=pruner /app/out/pnpm-lock.yaml .
RUN pnpm fetch
RUN pnpm install -r --offline

# Build the project
ENV NEXT_TELEMETRY_DISABLED 1

COPY --from=pruner /app/out/full/ .
COPY turbo.json turbo.json
RUN pnpm exec turbo run build --filter=jazz


FROM node:18-alpine AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

COPY --from=builder /app/apps/jazz/next.config.mjs .
COPY --from=builder /app/apps/jazz/package.json .

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/apps/jazz/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/jazz/.next/static ./apps/jazz/.next/static

ENV NEXT_TELEMETRY_DISABLED 1

CMD node apps/jazz/server.js
